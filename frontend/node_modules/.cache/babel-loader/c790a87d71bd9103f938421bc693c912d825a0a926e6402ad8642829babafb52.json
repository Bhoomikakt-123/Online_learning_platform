{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\devops\\\\frontend\\\\src\\\\pages\\\\MessagesPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography, List, ListItem, ListItemText, Divider, Paper, Box } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessagesPage = () => {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  useEffect(() => {\n    const fetchConversations = async () => {\n      try {\n        const response = await axios.get('/api/messages/conversations');\n        setConversations(response.data);\n      } catch (error) {\n        console.error('Error fetching conversations:', error);\n      }\n    };\n    fetchConversations();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 2\n      },\n      children: conversations.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n        children: conversations.map((conversation, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: conversation.participant.name,\n              secondary: conversation.lastMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), index < conversations.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 54\n          }, this)]\n        }, conversation._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"No messages yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(MessagesPage, \"O5exSWX9CCDe/tq8iR4AHPY4uSY=\");\n_c = MessagesPage;\nexport default MessagesPage;\nvar _c;\n$RefreshReg$(_c, \"MessagesPage\");","map":{"version":3,"names":["React","useState","useEffect","Typography","List","ListItem","ListItemText","Divider","Paper","Box","axios","jsxDEV","_jsxDEV","MessagesPage","_s","conversations","setConversations","fetchConversations","response","get","data","error","console","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","elevation","length","map","conversation","index","Fragment","button","primary","participant","name","secondary","lastMessage","_id","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/devops/frontend/src/pages/MessagesPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Typography, \r\n  List, \r\n  ListItem, \r\n  ListItemText, \r\n  Divider,\r\n  Paper,\r\n  Box\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst MessagesPage = () => {\r\n  const [conversations, setConversations] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchConversations = async () => {\r\n      try {\r\n        const response = await axios.get('/api/messages/conversations');\r\n        setConversations(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching conversations:', error);\r\n      }\r\n    };\r\n\r\n    fetchConversations();\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Messages\r\n      </Typography>\r\n      \r\n      <Paper elevation={3} sx={{ p: 2 }}>\r\n        {conversations.length > 0 ? (\r\n          <List>\r\n            {conversations.map((conversation, index) => (\r\n              <React.Fragment key={conversation._id}>\r\n                <ListItem button>\r\n                  <ListItemText\r\n                    primary={conversation.participant.name}\r\n                    secondary={conversation.lastMessage}\r\n                  />\r\n                </ListItem>\r\n                {index < conversations.length - 1 && <Divider />}\r\n              </React.Fragment>\r\n            ))}\r\n          </List>\r\n        ) : (\r\n          <Typography variant=\"body1\">No messages yet</Typography>\r\n        )}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MessagesPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}