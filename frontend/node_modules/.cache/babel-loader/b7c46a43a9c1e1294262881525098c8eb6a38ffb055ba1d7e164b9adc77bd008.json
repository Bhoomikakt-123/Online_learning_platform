{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\devops\\\\frontend\\\\src\\\\components\\\\OfflineContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Typography, Button, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OfflineContent = () => {\n  _s();\n  const [downloadedContent, setDownloadedContent] = useState([]);\n\n  // Mock function to simulate downloaded content\n  useEffect(() => {\n    // In a real app, this would fetch from IndexedDB or cache\n    const mockContent = [{\n      id: 1,\n      title: 'React Basics PDF',\n      type: 'PDF',\n      size: '2.4 MB'\n    }, {\n      id: 2,\n      title: 'JavaScript Video Lecture',\n      type: 'Video',\n      size: '45.2 MB'\n    }, {\n      id: 3,\n      title: 'Course Notes Week 1',\n      type: 'Text',\n      size: '0.5 MB'\n    }];\n    setDownloadedContent(mockContent);\n  }, []);\n  const handleDownloadMore = () => {\n    // In a real app, this would open a dialog to select content to download\n    alert('Select content to download for offline use');\n  };\n  const handleDeleteContent = id => {\n    setDownloadedContent(downloadedContent.filter(item => item.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"div\",\n        sx: {\n          mb: 2\n        },\n        children: \"Offline Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          mb: 3\n        },\n        children: \"Content downloaded for offline access will appear here. You can view this content even without an internet connection.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 22\n        }, this),\n        onClick: handleDownloadMore,\n        sx: {\n          mb: 3\n        },\n        children: \"Download More Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          my: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"div\",\n        sx: {\n          mb: 2\n        },\n        children: \"Your Downloaded Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), downloadedContent.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n        children: downloadedContent.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            size: \"small\",\n            startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 32\n            }, this),\n            onClick: () => handleDeleteContent(item.id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: item.title,\n            secondary: `${item.type} • ${item.size}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: \"No content downloaded yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(OfflineContent, \"HINyMMeVqYt10LinaTHl3BrIQRM=\");\n_c = OfflineContent;\nexport default OfflineContent;\nvar _c;\n$RefreshReg$(_c, \"OfflineContent\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Typography","Button","List","ListItem","ListItemText","Divider","DownloadIcon","DeleteIcon","jsxDEV","_jsxDEV","OfflineContent","_s","downloadedContent","setDownloadedContent","mockContent","id","title","type","size","handleDownloadMore","alert","handleDeleteContent","filter","item","children","variant","component","sx","mb","fileName","_jsxFileName","lineNumber","columnNumber","startIcon","onClick","my","length","map","secondaryAction","primary","secondary","color","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/devops/frontend/src/components/OfflineContent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, Typography, Button, List, ListItem, ListItemText, Divider } from '@mui/material';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nconst OfflineContent = () => {\r\n  const [downloadedContent, setDownloadedContent] = useState([]);\r\n\r\n  // Mock function to simulate downloaded content\r\n  useEffect(() => {\r\n    // In a real app, this would fetch from IndexedDB or cache\r\n    const mockContent = [\r\n      { id: 1, title: 'React Basics PDF', type: 'PDF', size: '2.4 MB' },\r\n      { id: 2, title: 'JavaScript Video Lecture', type: 'Video', size: '45.2 MB' },\r\n      { id: 3, title: 'Course Notes Week 1', type: 'Text', size: '0.5 MB' },\r\n    ];\r\n    setDownloadedContent(mockContent);\r\n  }, []);\r\n\r\n  const handleDownloadMore = () => {\r\n    // In a real app, this would open a dialog to select content to download\r\n    alert('Select content to download for offline use');\r\n  };\r\n\r\n  const handleDeleteContent = (id) => {\r\n    setDownloadedContent(downloadedContent.filter(item => item.id !== id));\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"div\" sx={{ mb: 2 }}>\r\n          Offline Content\r\n        </Typography>\r\n        <Typography variant=\"body1\" sx={{ mb: 3 }}>\r\n          Content downloaded for offline access will appear here. You can view this content even without an internet connection.\r\n        </Typography>\r\n        \r\n        <Button \r\n          variant=\"contained\" \r\n          startIcon={<DownloadIcon />}\r\n          onClick={handleDownloadMore}\r\n          sx={{ mb: 3 }}\r\n        >\r\n          Download More Content\r\n        </Button>\r\n        \r\n        <Divider sx={{ my: 2 }} />\r\n        \r\n        <Typography variant=\"h6\" component=\"div\" sx={{ mb: 2 }}>\r\n          Your Downloaded Content\r\n        </Typography>\r\n        \r\n        {downloadedContent.length > 0 ? (\r\n          <List>\r\n            {downloadedContent.map(item => (\r\n              <ListItem \r\n                key={item.id}\r\n                secondaryAction={\r\n                  <Button \r\n                    variant=\"outlined\" \r\n                    size=\"small\" \r\n                    startIcon={<DeleteIcon />}\r\n                    onClick={() => handleDeleteContent(item.id)}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                }\r\n              >\r\n                <ListItemText \r\n                  primary={item.title} \r\n                  secondary={`${item.type} • ${item.size}`} \r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        ) : (\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            No content downloaded yet.\r\n          </Typography>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default OfflineContent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}