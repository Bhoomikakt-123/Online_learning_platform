{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\devops\\\\frontend\\\\src\\\\components\\\\CourseList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Typography, Button, Grid } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseList = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const response = await axios.get('/api/courses');\n        setCourses(response.data);\n      } catch (error) {\n        console.error('Error fetching courses:', error);\n        // For demo purposes, use mock data if API fails\n        setCourses([{\n          id: 1,\n          title: 'Introduction to React',\n          description: 'Learn React fundamentals'\n        }, {\n          id: 2,\n          title: 'Advanced JavaScript',\n          description: 'Deep dive into JS concepts'\n        }, {\n          id: 3,\n          title: 'Node.js Basics',\n          description: 'Backend development with Node'\n        }]);\n      }\n    };\n    fetchCourses();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: courses.map(course => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"div\",\n            children: course.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: course.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"small\",\n            sx: {\n              mt: 2\n            },\n            href: `/courses/${course.id}`,\n            children: \"View Course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            size: \"small\",\n            sx: {\n              mt: 2,\n              ml: 1\n            },\n            onClick: () => downloadForOffline(course.id),\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, course.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseList, \"Ks3haE1eP87BHv/TJ29co0rtnQM=\");\n_c = CourseList;\nconst downloadForOffline = courseId => {\n  // In a real app, this would fetch course content and store it in IndexedDB or Cache\n  console.log(`Downloading course ${courseId} for offline use`);\n  alert('Course content will be available offline');\n};\nexport default CourseList;\nvar _c;\n$RefreshReg$(_c, \"CourseList\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Typography","Button","Grid","axios","jsxDEV","_jsxDEV","CourseList","_s","courses","setCourses","fetchCourses","response","get","data","error","console","id","title","description","container","spacing","children","map","course","item","xs","sm","md","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","color","size","sx","mt","href","ml","onClick","downloadForOffline","_c","courseId","log","alert","$RefreshReg$"],"sources":["C:/Users/User/Desktop/devops/frontend/src/components/CourseList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, Typography, Button, Grid } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst CourseList = () => {\r\n  const [courses, setCourses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCourses = async () => {\r\n      try {\r\n        const response = await axios.get('/api/courses');\r\n        setCourses(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching courses:', error);\r\n        // For demo purposes, use mock data if API fails\r\n        setCourses([\r\n          { id: 1, title: 'Introduction to React', description: 'Learn React fundamentals' },\r\n          { id: 2, title: 'Advanced JavaScript', description: 'Deep dive into JS concepts' },\r\n          { id: 3, title: 'Node.js Basics', description: 'Backend development with Node' }\r\n        ]);\r\n      }\r\n    };\r\n    fetchCourses();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {courses.map(course => (\r\n        <Grid item xs={12} sm={6} md={4} key={course.id}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h5\" component=\"div\">\r\n                {course.title}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {course.description}\r\n              </Typography>\r\n              <Button \r\n                variant=\"contained\" \r\n                size=\"small\" \r\n                sx={{ mt: 2 }}\r\n                href={`/courses/${course.id}`}\r\n              >\r\n                View Course\r\n              </Button>\r\n              <Button \r\n                variant=\"outlined\" \r\n                size=\"small\" \r\n                sx={{ mt: 2, ml: 1 }}\r\n                onClick={() => downloadForOffline(course.id)}\r\n              >\r\n                Download\r\n              </Button>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst downloadForOffline = (courseId) => {\r\n  // In a real app, this would fetch course content and store it in IndexedDB or Cache\r\n  console.log(`Downloading course ${courseId} for offline use`);\r\n  alert('Course content will be available offline');\r\n};\r\n\r\nexport default CourseList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}